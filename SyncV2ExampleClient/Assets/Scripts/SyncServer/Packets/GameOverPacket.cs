// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SyncServer
{

using global::System;
using global::FlatBuffers;

public struct GameOverPacket : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GameOverPacket GetRootAsGameOverPacket(ByteBuffer _bb) { return GetRootAsGameOverPacket(_bb, new GameOverPacket()); }
  public static GameOverPacket GetRootAsGameOverPacket(ByteBuffer _bb, GameOverPacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GameOverPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Opcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public bool GameSuccessful { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<GameOverPacket> CreateGameOverPacket(FlatBufferBuilder builder,
      short opcode = 0,
      bool gameSuccessful = false) {
    builder.StartObject(2);
    GameOverPacket.AddOpcode(builder, opcode);
    GameOverPacket.AddGameSuccessful(builder, gameSuccessful);
    return GameOverPacket.EndGameOverPacket(builder);
  }

  public static void StartGameOverPacket(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddOpcode(FlatBufferBuilder builder, short opcode) { builder.AddShort(0, opcode, 0); }
  public static void AddGameSuccessful(FlatBufferBuilder builder, bool gameSuccessful) { builder.AddBool(1, gameSuccessful, false); }
  public static Offset<GameOverPacket> EndGameOverPacket(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GameOverPacket>(o);
  }
};


}
