// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SyncServer
{

using global::System;
using global::FlatBuffers;

public struct PlayerUpdatePacket : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PlayerUpdatePacket GetRootAsPlayerUpdatePacket(ByteBuffer _bb) { return GetRootAsPlayerUpdatePacket(_bb, new PlayerUpdatePacket()); }
  public static PlayerUpdatePacket GetRootAsPlayerUpdatePacket(ByteBuffer _bb, PlayerUpdatePacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PlayerUpdatePacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Opcode { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)3; } }
  public float PosX { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PosY { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<PlayerUpdatePacket> CreatePlayerUpdatePacket(FlatBufferBuilder builder,
      short opcode = 3,
      float pos_x = 0.0f,
      float pos_y = 0.0f) {
    builder.StartObject(3);
    PlayerUpdatePacket.AddPosY(builder, pos_y);
    PlayerUpdatePacket.AddPosX(builder, pos_x);
    PlayerUpdatePacket.AddOpcode(builder, opcode);
    return PlayerUpdatePacket.EndPlayerUpdatePacket(builder);
  }

  public static void StartPlayerUpdatePacket(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddOpcode(FlatBufferBuilder builder, short opcode) { builder.AddShort(0, opcode, 3); }
  public static void AddPosX(FlatBufferBuilder builder, float posX) { builder.AddFloat(1, posX, 0.0f); }
  public static void AddPosY(FlatBufferBuilder builder, float posY) { builder.AddFloat(2, posY, 0.0f); }
  public static Offset<PlayerUpdatePacket> EndPlayerUpdatePacket(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PlayerUpdatePacket>(o);
  }
};


}
