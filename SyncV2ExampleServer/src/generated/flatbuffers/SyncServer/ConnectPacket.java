// automatically generated by the FlatBuffers compiler, do not modify

package SyncServer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ConnectPacket extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static ConnectPacket getRootAsConnectPacket(ByteBuffer _bb) { return getRootAsConnectPacket(_bb, new ConnectPacket()); }
  public static ConnectPacket getRootAsConnectPacket(ByteBuffer _bb, ConnectPacket obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ConnectPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short opcode() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public long userId() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String matchId() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer matchIdAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer matchIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String externalToken() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer externalTokenAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer externalTokenInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }

  public static int createConnectPacket(FlatBufferBuilder builder,
      short opcode,
      long userId,
      int matchIdOffset,
      int externalTokenOffset) {
    builder.startTable(4);
    ConnectPacket.addUserId(builder, userId);
    ConnectPacket.addExternalToken(builder, externalTokenOffset);
    ConnectPacket.addMatchId(builder, matchIdOffset);
    ConnectPacket.addOpcode(builder, opcode);
    return ConnectPacket.endConnectPacket(builder);
  }

  public static void startConnectPacket(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addOpcode(FlatBufferBuilder builder, short opcode) { builder.addShort(0, opcode, 0); }
  public static void addUserId(FlatBufferBuilder builder, long userId) { builder.addLong(1, userId, 0L); }
  public static void addMatchId(FlatBufferBuilder builder, int matchIdOffset) { builder.addOffset(2, matchIdOffset, 0); }
  public static void addExternalToken(FlatBufferBuilder builder, int externalTokenOffset) { builder.addOffset(3, externalTokenOffset, 0); }
  public static int endConnectPacket(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ConnectPacket get(int j) { return get(new ConnectPacket(), j); }
    public ConnectPacket get(ConnectPacket obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

