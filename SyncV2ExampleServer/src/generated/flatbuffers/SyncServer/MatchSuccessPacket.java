// automatically generated by the FlatBuffers compiler, do not modify

package SyncServer;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class MatchSuccessPacket extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static MatchSuccessPacket getRootAsMatchSuccessPacket(ByteBuffer _bb) { return getRootAsMatchSuccessPacket(_bb, new MatchSuccessPacket()); }
  public static MatchSuccessPacket getRootAsMatchSuccessPacket(ByteBuffer _bb, MatchSuccessPacket obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public MatchSuccessPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short opcode() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public String registeredMatchId() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer registeredMatchIdAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer registeredMatchIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public boolean matchStarting() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean success() { int o = __offset(10); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public int tickRate() { int o = __offset(12); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createMatchSuccessPacket(FlatBufferBuilder builder,
      short opcode,
      int registeredMatchIdOffset,
      boolean matchStarting,
      boolean success,
      int tick_rate) {
    builder.startTable(5);
    MatchSuccessPacket.addTickRate(builder, tick_rate);
    MatchSuccessPacket.addRegisteredMatchId(builder, registeredMatchIdOffset);
    MatchSuccessPacket.addOpcode(builder, opcode);
    MatchSuccessPacket.addSuccess(builder, success);
    MatchSuccessPacket.addMatchStarting(builder, matchStarting);
    return MatchSuccessPacket.endMatchSuccessPacket(builder);
  }

  public static void startMatchSuccessPacket(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addOpcode(FlatBufferBuilder builder, short opcode) { builder.addShort(0, opcode, 0); }
  public static void addRegisteredMatchId(FlatBufferBuilder builder, int registeredMatchIdOffset) { builder.addOffset(1, registeredMatchIdOffset, 0); }
  public static void addMatchStarting(FlatBufferBuilder builder, boolean matchStarting) { builder.addBoolean(2, matchStarting, false); }
  public static void addSuccess(FlatBufferBuilder builder, boolean success) { builder.addBoolean(3, success, false); }
  public static void addTickRate(FlatBufferBuilder builder, int tickRate) { builder.addInt(4, tickRate, 0); }
  public static int endMatchSuccessPacket(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public MatchSuccessPacket get(int j) { return get(new MatchSuccessPacket(), j); }
    public MatchSuccessPacket get(MatchSuccessPacket obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

